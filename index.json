[{"uri":"https://hpwclifford.github.io/hugo-demo/about/","title":"About","tags":[],"description":"","content":"About This is an example of a pretty basic hugo site using an open-source theme and github pages for free static deployment\nA few benefits of this approach: living right in the repo could allow documentation to live next to code uses lightweight set-and-forget github actions workflow for build / deployment git and markdown make further additions simple auth can be configured to only people with repo access it\u0026rsquo;s free! "},{"uri":"https://hpwclifford.github.io/hugo-demo/setuphugo/","title":"Hugo Setup","tags":[],"description":"","content":"Hugo Setup Guide I.) basic setup Using the hugo cli, we can generate a new project directory within our existing project:\nhugo new site web Then, we\u0026rsquo;ll select a theme and add it as a github submodule. Here\u0026rsquo;s how I downloaded the theme for this site:\ngit submodule add https://github.com/matcornic/hugo-theme-learn web/themes/hugo-theme-learn And that\u0026rsquo;s it! We have the basic setup to build a hugo site. Let\u0026rsquo;s get building!\nNote: from here on out, all commands should be executed from the web/ directory.\nII.) creating site content We can use the hugo cli to start a local development server:\nhugo server This will provide a fast-reloading dev environment and will default to serve our site at https://localhost:1313/our-repo/\nStart building sites â€¦ hugo v0.100.2+extended darwin/amd64 BuildDate=unknown | EN -------------------+----- Pages | 12 Paginator pages | 0 Non-page files | 0 Static files | 75 Processed images | 0 Aliases | 0 Sitemaps | 1 Cleaned | 0 Built in 44 ms Watching for changes in /Users/harry.clifford.getweave/Development/go/src/hugo-demo/web/{archetypes,content,data,layouts,static,themes} Watching for config changes in /Users/harry.clifford.getweave/Development/go/src/hugo-demo/web/config.toml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/hugo-demo/ (bind address 127.0.0.1) Press Ctrl+C to stop From here we can use hugo and our configured theme to build the site. Links to docs:\nHugo Docs\nLearn Theme Docs\n"},{"uri":"https://hpwclifford.github.io/hugo-demo/setuppages/","title":"Pages Setup","tags":[],"description":"","content":"GitHub Pages Setup Guide I.) use GitHub actions for build + deploy We can configure a github actions workflow to build and deploy our site. Create a file named .github/workflows/gh-pages.yaml that looks something like this:\nname: github pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify working-directory: ./web - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./web/public Now, when we merge to main, a github action will be run that builds the hugo site in web/ and deploys the dist files to a new branch, gh-pages\nII.) deploy site with GitHub Now all we have to do is navigate to settings -\u0026gt; pages and deploy our gh-pages branch from the /(root) dir. And that\u0026rsquo;s it! Our page will automatically deploy to the corresponding URL.\nfor example: if we were working in a repo called some-data-service, our site would deploy at:\nhttps://weave-lab.github.io/some-data-service "},{"uri":"https://hpwclifford.github.io/hugo-demo/","title":"Weave Docs","tags":[],"description":"","content":"Landing Page Heading 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lectus quam id leo in vitae turpis massa sed. Ut aliquam purus sit amet luctus venenatis lectus. Sed adipiscing diam donec adipiscing tristique. Enim lobortis scelerisque fermentum dui faucibus in ornare quam. Id leo in vitae turpis. Vel pretium lectus quam id leo in vitae turpis massa. Blandit libero volutpat sed cras ornare arcu dui vivamus arcu. Enim nulla aliquet porttitor lacus luctus accumsan tortor posuere ac. Nisl tincidunt eget nullam non nisi est sit amet. Ut sem nulla pharetra diam sit amet nisl suscipit adipiscing. Egestas sed sed risus pretium quam.\npackage server import ( \u0026#34;fmt\u0026#34; \u0026#34;github.com/somerepo/internal/fruitbasket\u0026#34; \u0026#34;github.com/sharedrepo/shared/fruitserver\u0026#34; ) type FruitServer struct { mgr *fruitbasket.Manager } func NewFruitServer(mgr *fruitbasket.Manager) *FruitServer { return \u0026amp;FruitServer{ mgr: mgr, } } func (s *FruitServer) ListBananas(ctx context.Context, req *fruitserver.ListBananasRequest) (*fruitserver.ListBananasResponse, error) { // Some code . . . } Donec massa sapien faucibus et molestie. Suspendisse sed nisi lacus sed viverra tellus. At lectus urna duis convallis convallis. Turpis nunc eget lorem dolor sed viverra. Vel elit scelerisque mauris pellentesque pulvinar pellentesque habitant. Nibh mauris cursus mattis molestie. Sed vulputate mi sit amet mauris commodo. Duis tristique sollicitudin nibh sit amet. Cursus vitae congue mauris rhoncus aenean vel. Neque gravida in fermentum et sollicitudin ac orci.\nHeading 2 Nunc non blandit massa enim. Sit amet consectetur adipiscing elit. Tristique senectus et netus et malesuada fames ac. Donec et odio pellentesque diam volutpat commodo sed egestas. Porttitor rhoncus dolor purus non enim praesent elementum facilisis leo. Quisque sagittis purus sit amet volutpat. Donec et odio pellentesque diam volutpat commodo sed. Sed enim ut sem viverra. Vulputate enim nulla aliquet porttitor lacus luctus accumsan tortor. Orci eu lobortis elementum nibh tellus molestie nunc non blandit. Faucibus nisl tincidunt eget nullam non nisi est. Pellentesque pulvinar pellentesque habitant morbi. Est ante in nibh mauris cursus mattis molestie a iaculis.\nEu scelerisque felis imperdiet proin fermentum leo vel orci. Neque gravida in fermentum et sollicitudin ac orci. Scelerisque in dictum non consectetur a. Ac felis donec et odio pellentesque diam. Ut porttitor leo a diam. Sodales neque sodales ut etiam sit amet nisl purus. Ac tortor dignissim convallis aenean et tortor at. Lobortis mattis aliquam faucibus purus in massa. Laoreet suspendisse interdum consectetur libero id faucibus nisl tincidunt. At volutpat diam ut venenatis tellus in. Sed sed risus pretium quam vulputate dignissim suspendisse. Aenean euismod elementum nisi quis. Donec ac odio tempor orci dapibus ultrices in. Aliquam ultrices sagittis orci a scelerisque purus semper eget duis. Ullamcorper eget nulla facilisi etiam dignissim diam quis. Id diam maecenas ultricies mi eget mauris pharetra et. Vestibulum morbi blandit cursus risus. Vel pretium lectus quam id leo. Nullam vehicula ipsum a arcu cursus vitae congue mauris. Mi tempus imperdiet nulla malesuada pellentesque.\nVestibulum lectus mauris ultrices eros in cursus. Id semper risus in hendrerit gravida rutrum. Ornare aenean euismod elementum nisi quis eleifend. Venenatis cras sed felis eget velit aliquet. Lacinia at quis risus sed vulputate. Molestie at elementum eu facilisis sed odio morbi quis commodo. Condimentum mattis pellentesque id nibh tortor id aliquet lectus. Dignissim diam quis enim lobortis. Bibendum neque egestas congue quisque egestas diam. Congue nisi vitae suscipit tellus.\n"},{"uri":"https://hpwclifford.github.io/hugo-demo/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://hpwclifford.github.io/hugo-demo/tags/","title":"Tags","tags":[],"description":"","content":""}]